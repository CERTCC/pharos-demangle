// This file is meant to be included after setting ENUM(enum_symbol,
// enum_string) to an appropriate macro.  The ENUM macro will be
// undefined at the end of this file.

#ifndef ENUM
#  error "ENUM() has not been defined"
#endif

ENUM(UNDEFINED,                         ""),

ENUM(BOOL,                              "bool"),
ENUM(SIGNED_CHAR,                       "signed char"),
ENUM(CHAR,                              "char"),
ENUM(UNSIGNED_CHAR,                     "unsigned char"),
ENUM(SHORT,                             "short"),
ENUM(UNSIGNED_SHORT,                    "unsigned short"),
ENUM(INT,                               "int"),
ENUM(UNSIGNED_INT,                      "unsigned int"),
ENUM(LONG,                              "long"),
ENUM(UNSIGNED_LONG,                     "unsigned long"),
ENUM(FLOAT,                             "float"),
ENUM(DOUBLE,                            "double"),
ENUM(LONG_DOUBLE,                       "long double"),

ENUM(INT8,                              "int8_t"),
ENUM(UINT8,                             "uint8_t"),
ENUM(INT16,                             "int16_t"),
ENUM(UINT16,                            "uint16_t"),
ENUM(INT32,                             "int32_t"),
ENUM(UINT32,                            "uint32_t"),
ENUM(INT64,                             "int64_t"),
ENUM(UINT64,                            "uint64_t"),
ENUM(CHAR16,                            "char16_t"),
ENUM(CHAR32,                            "char32_t"),
ENUM(WCHAR,                             "wchar_t"),

ENUM(CTOR,                              "`constructor'"),
ENUM(DTOR,                              "`destructor'"),
ENUM(OP_NEW,                            "operator new"),
ENUM(OP_DELETE,                         "operator delete"),
ENUM(OP_ASSIGN,                         "operator="),
ENUM(OP_RSHIFT,                         "operator>>"),
ENUM(OP_LSHIFT,                         "operator<<"),
ENUM(OP_NOT,                            "operator!"),
ENUM(OP_EQUAL,                          "operator=="),
ENUM(OP_NOTEQUAL,                       "operator!="),
ENUM(OP_INDEX,                          "operator[]"),
ENUM(OP_TYPE,                           "operator `type'"),
ENUM(OP_INDIRECT,                       "operator->"),
ENUM(OP_STAR,                           "operator*"),
ENUM(OP_PLUSPLUS,                       "operator++"),
ENUM(OP_MINUSMINUS,                     "operator--"),
ENUM(OP_MINUS,                          "operator-"),
ENUM(OP_PLUS,                           "operator+"),
ENUM(OP_AMP,                            "operator&"),
ENUM(OP_INDIRECT_METHOD,                "operator->*"),
ENUM(OP_DIV,                            "operator/"),
ENUM(OP_MOD,                            "operator%"),
ENUM(OP_LESS,                           "operator<"),
ENUM(OP_LESSEQ,                         "operator<="),
ENUM(OP_GREATER,                        "operator>"),
ENUM(OP_GREATEREQ,                      "operator>="),
ENUM(OP_COMMA,                          "operator,"),
ENUM(OP_CALL,                           "operator()"),
ENUM(OP_BNOT,                           "operator~"),
ENUM(OP_BXOR,                           "operator^"),
ENUM(OP_BOR,                            "operator|"),
ENUM(OP_AND,                            "operator&&"),
ENUM(OP_OR,                             "operator||"),
ENUM(OP_STAR_ASSIGN,                    "operator*="),
ENUM(OP_PLUS_ASSIGN,                    "operator+="),
ENUM(OP_MINUS_ASSIGN,                   "operator-="),
ENUM(OP_DIV_ASSIGN,                     "operator/="),
ENUM(OP_MOD_ASSIGN,                     "operator%="),
ENUM(OP_RSHIFT_ASSIGN,                  "operator>>="),
ENUM(OP_LSHIFT_ASSIGN,                  "operator<<="),
ENUM(OP_AMP_ASSIGN,                     "operator&="),
ENUM(OP_BOR_ASSIGN,                     "operator|="),
ENUM(OP_BXOR_ASSIGN,                    "operator^="),
ENUM(VFTABLE,                           "`vftable'"),
ENUM(VBTABLE,                           "`vbtable'"),
ENUM(VCALL,                             "`vcall'"),
ENUM(TYPEOF,                            "`typeof'"),
ENUM(LOCAL_STATIC_GUARD,                "`local static guard'"),
ENUM(VBASE_DTOR,                        "`vbase destructor'"),
ENUM(VBASE_DELETING_DTOR,               "`vector deleting destructor'"),
ENUM(DEFAULT_CTOR_CLOSURE,              "`default constructor closure'"),
ENUM(SCALAR_DELETING_DTOR,              "`scalar deleting destructor'"),
ENUM(VECTOR_CTOR_ITER,                  "`vector constructor iterator'"),
ENUM(VECTOR_DTOR_ITER,                  "`vector destructor iterator'"),
ENUM(VECTOR_VBASE_CTOR_ITER,            "`vector vbase constructor iterator'"),
ENUM(VIRTUAL_DISPLACEMENT_MAP,          "`virtual displacement map'"),
ENUM(EH_VECTOR_CTOR_ITER,               "`eh vector constructor iterator'"),
ENUM(EH_VECTOR_DTOR_ITER,               "`eh vector destructor iterator'"),
ENUM(EH_VECTOR_VBASE_CTOR_ITER,         "`eh vector vbase constructor iterator'"),
ENUM(COPY_CTOR_CLOSURE,                 "`copy constructor closure'"),
ENUM(UDT_RETURNING,                     "`udt returning'"),
ENUM(LOCAL_VFTABLE,                     "`local vftable'"),
ENUM(LOCAL_VFTABLE_CTOR_CLOSURE,        "`local vftable constructor closure'"),
ENUM(OP_NEW_ARRAY,                      "operator new[]"),
ENUM(OP_DELETE_ARRAY,                   "operator delete[]"),
ENUM(OP_PLACEMENT_DELETE_CLOSURE,       "`placement delete closure'"),
ENUM(OP_PLACEMENT_DELETE_ARRAY_CLOSURE, "`placement delete[] closure'"),
ENUM(MANAGED_VECTOR_CTOR_ITER,          "`managed vector constructor iterator'"),
ENUM(MANAGED_VECTOR_DTOR_ITER,          "`managed vector destructor iterator'"),
ENUM(EH_VECTOR_COPY_CTOR_ITER,          "`eh vector copy constructor iterator'"),
ENUM(EH_VECTOR_VBASE_COPY_CTOR_ITER,    "`eh vector vbase copy constructor iterator'"),
ENUM(DYNAMIC_INITIALIZER,               "`dynamic initializer'"),
ENUM(DYNAMIC_ATEXIT_DTOR,               "`dynamic atexit destructor'"),
ENUM(VECTOR_COPY_CTOR_ITER,             "`vector copy constructor iterator'"),
ENUM(VECTOR_VBASE_COPY_CTOR_ITER,       "`vector vbase copy constructor iterator'"),
ENUM(MANAGED_VECTOR_COPY_CTOR_ITER,     "`managed vector copy constructor iterator'"),
ENUM(LOCAL_STATIC_THREAD_GUARD,         "`local static thread guard'"),
ENUM(OP_DQUOTE,                         "operator\"\""),

ENUM(RTTI_TYPE_DESC,                    "`RTTI Type Descriptor'"),
ENUM(RTTI_BASE_CLASS_DESC,              "`RTTI Base Class Descriptor'"),
ENUM(RTTI_BASE_CLASS_ARRAY,             "`RTTI Base Class Array'"),
ENUM(RTTI_CLASS_HEIRARCHY_DESC,         "`RTTI Class Hierarchy Descriptor'"),
ENUM(RTTI_COMPLETE_OBJ_LOCATOR,         "`RTTI Complete Object Locator'")

#undef ENUM
